---
- name: "Neovim | Dependencies"
  ansible.builtin.apt:
    name:
      - cmake
      - curl
      - pkg-config
      - libtool
      - unzip
      - ansible-lint
      - ripgrep
      - fd-find
    state: present
  become: true

- name: "Neovim | Check if cargo is installed"
  shell: command -v cargo
  register: cargo_exists
  ignore_errors: yes

- name: "Neovim | Install cargo"
  when: cargo_exists is failed
  ansible.builtin.include_role:
    name: rust

- name: "Neovim | Install Treesitter-cli"
  shell: cargo install tree-sitter-cli

- name: "Neovim | Install fzf"
  ansible.builtin.include_role:
    name: fzf

# - name: "Neovim | Install fonts"
#   ansible.builtin.include_role:
#     name: fonts

- name: Neovim | Download Neovim
  ansible.builtin.get_url:
    url: "https://github.com/neovim/neovim/releases/download/v0.9.5/nvim-linux64.tar.gz"
    dest: "/tmp/nvim-linux64.tar.gz"
    mode: "0644"

- name: "Neovim| Check if /opt/nvim-linux64 directory exists"
  file:
    path: "/opt/nvim-linux64"
    recurse: true
    state: directory
  become: true

- name: Neovim | Extract Neovim to /opt
  ansible.builtin.unarchive:
    src: "/tmp/nvim-linux64.tar.gz"
    dest: /opt/nvim-linux64
    extra_opts: [--strip-components=1]  
  become: true

- name: "Neovim | Config folder"
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/nvim"
    state: directory

- name: "Neovim | Create symlink to role files directory"
  ansible.builtin.file:
    src: "{{ role_path }}/files"
    dest: "{{ ansible_user_dir }}/.config/nvim"
    state: link
    force: true

- name: "Neovim | Check what shell we are running"
  ansible.builtin.shell: echo $SHELL
  register: returned_shell
  become_user: "{{ ansible_user_id }}"

- name: "Neovim | Add vi alias to ~/.zshrc"
  when: returned_shell.stdout.find('zsh') != -1
  lineinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    line: 'alias vi=nvim'
    create: true
    state: present

- name: "Neovim | Add neovim binary path to ~/.zshrc"
  when: returned_shell.stdout.find('zsh') != -1
  lineinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    line: 'export PATH=$PATH:/opt/nvim-linux64/bin'
    create: true
    state: present

- name: "Neovim | Source updated profile"
  when: returned_shell.stdout.find('zsh') != -1
  shell: . ~/.zshrc
  become_user: "{{ ansible_user_id }}"

- name: "Neovim | Add vi alias to ~/.bashrc"
  when: returned_shell.stdout.find('bash') != -1
  lineinfile:
    path: '{{ ansible_user_dir }}/.bashrc'
    line: 'alias vi=nvim'
    create: true
    state: present

- name: "Neovim | Add neovim binary path to ~/.bashrc"
  when: returned_shell.stdout.find('bash') != -1
  lineinfile:
    path: '{{ ansible_user_dir }}/.bashrc'
    line: 'export PATH=$PATH:/opt/nvim-linux64/bin'
    create: true
    state: present

- name: "Go | Source updated profile"
  when: returned_shell.stdout.find('bash') != -1
  shell: . ~/.bashrc
  become_user: "{{ ansible_user_id }}"